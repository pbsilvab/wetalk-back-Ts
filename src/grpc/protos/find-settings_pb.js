// source: find-settings.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.find_settings.EmptyRequest', null, global);
goog.exportSymbol('proto.find_settings.FindFilter', null, global);
goog.exportSymbol('proto.find_settings.FindSettings', null, global);
goog.exportSymbol('proto.find_settings.FindSettings.FilterSetting', null, global);
goog.exportSymbol('proto.find_settings.FindSettings.FilterSetting.FilterOption', null, global);
goog.exportSymbol('proto.find_settings.FindSettings.OrderSetting', null, global);
goog.exportSymbol('proto.find_settings.PageInfo', null, global);
goog.exportSymbol('proto.find_settings.SearchTerm', null, global);
goog.exportSymbol('proto.find_settings.SearchTerm.Match', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.find_settings.FindSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.find_settings.FindSettings.repeatedFields_, null);
};
goog.inherits(proto.find_settings.FindSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.find_settings.FindSettings.displayName = 'proto.find_settings.FindSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.find_settings.FindSettings.FilterSetting = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.find_settings.FindSettings.FilterSetting.repeatedFields_, null);
};
goog.inherits(proto.find_settings.FindSettings.FilterSetting, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.find_settings.FindSettings.FilterSetting.displayName = 'proto.find_settings.FindSettings.FilterSetting';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.find_settings.FindSettings.FilterSetting.FilterOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.find_settings.FindSettings.FilterSetting.FilterOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.find_settings.FindSettings.FilterSetting.FilterOption.displayName = 'proto.find_settings.FindSettings.FilterSetting.FilterOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.find_settings.FindSettings.OrderSetting = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.find_settings.FindSettings.OrderSetting, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.find_settings.FindSettings.OrderSetting.displayName = 'proto.find_settings.FindSettings.OrderSetting';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.find_settings.EmptyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.find_settings.EmptyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.find_settings.EmptyRequest.displayName = 'proto.find_settings.EmptyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.find_settings.FindFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.find_settings.FindFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.find_settings.FindFilter.displayName = 'proto.find_settings.FindFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.find_settings.SearchTerm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.find_settings.SearchTerm.repeatedFields_, null);
};
goog.inherits(proto.find_settings.SearchTerm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.find_settings.SearchTerm.displayName = 'proto.find_settings.SearchTerm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.find_settings.PageInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.find_settings.PageInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.find_settings.PageInfo.displayName = 'proto.find_settings.PageInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.find_settings.FindSettings.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.find_settings.FindSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.find_settings.FindSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.find_settings.FindSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.FindSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    searchableFieldsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto.find_settings.FindSettings.FilterSetting.toObject, includeInstance),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    proto.find_settings.FindSettings.OrderSetting.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.find_settings.FindSettings}
 */
proto.find_settings.FindSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.find_settings.FindSettings;
  return proto.find_settings.FindSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.find_settings.FindSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.find_settings.FindSettings}
 */
proto.find_settings.FindSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addSearchableFields(value);
      break;
    case 2:
      var value = new proto.find_settings.FindSettings.FilterSetting;
      reader.readMessage(value,proto.find_settings.FindSettings.FilterSetting.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    case 3:
      var value = new proto.find_settings.FindSettings.OrderSetting;
      reader.readMessage(value,proto.find_settings.FindSettings.OrderSetting.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.find_settings.FindSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.find_settings.FindSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.find_settings.FindSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.FindSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSearchableFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.find_settings.FindSettings.FilterSetting.serializeBinaryToWriter
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.find_settings.FindSettings.OrderSetting.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.find_settings.FindSettings.FilterSetting.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.find_settings.FindSettings.FilterSetting.prototype.toObject = function(opt_includeInstance) {
  return proto.find_settings.FindSettings.FilterSetting.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.find_settings.FindSettings.FilterSetting} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.FindSettings.FilterSetting.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: jspb.Message.getFieldWithDefault(msg, 1, ""),
    text: jspb.Message.getFieldWithDefault(msg, 2, ""),
    optionsList: jspb.Message.toObjectList(msg.getOptionsList(),
    proto.find_settings.FindSettings.FilterSetting.FilterOption.toObject, includeInstance),
    multi: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.find_settings.FindSettings.FilterSetting}
 */
proto.find_settings.FindSettings.FilterSetting.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.find_settings.FindSettings.FilterSetting;
  return proto.find_settings.FindSettings.FilterSetting.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.find_settings.FindSettings.FilterSetting} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.find_settings.FindSettings.FilterSetting}
 */
proto.find_settings.FindSettings.FilterSetting.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 3:
      var value = new proto.find_settings.FindSettings.FilterSetting.FilterOption;
      reader.readMessage(value,proto.find_settings.FindSettings.FilterSetting.FilterOption.deserializeBinaryFromReader);
      msg.addOptions(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMulti(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.find_settings.FindSettings.FilterSetting.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.find_settings.FindSettings.FilterSetting.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.find_settings.FindSettings.FilterSetting} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.FindSettings.FilterSetting.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.find_settings.FindSettings.FilterSetting.FilterOption.serializeBinaryToWriter
    );
  }
  f = message.getMulti();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.find_settings.FindSettings.FilterSetting.FilterOption.prototype.toObject = function(opt_includeInstance) {
  return proto.find_settings.FindSettings.FilterSetting.FilterOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.find_settings.FindSettings.FilterSetting.FilterOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.FindSettings.FilterSetting.FilterOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, ""),
    text: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.find_settings.FindSettings.FilterSetting.FilterOption}
 */
proto.find_settings.FindSettings.FilterSetting.FilterOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.find_settings.FindSettings.FilterSetting.FilterOption;
  return proto.find_settings.FindSettings.FilterSetting.FilterOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.find_settings.FindSettings.FilterSetting.FilterOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.find_settings.FindSettings.FilterSetting.FilterOption}
 */
proto.find_settings.FindSettings.FilterSetting.FilterOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.find_settings.FindSettings.FilterSetting.FilterOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.find_settings.FindSettings.FilterSetting.FilterOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.find_settings.FindSettings.FilterSetting.FilterOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.FindSettings.FilterSetting.FilterOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.find_settings.FindSettings.FilterSetting.FilterOption.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.find_settings.FindSettings.FilterSetting.FilterOption} returns this
 */
proto.find_settings.FindSettings.FilterSetting.FilterOption.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string text = 2;
 * @return {string}
 */
proto.find_settings.FindSettings.FilterSetting.FilterOption.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.find_settings.FindSettings.FilterSetting.FilterOption} returns this
 */
proto.find_settings.FindSettings.FilterSetting.FilterOption.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string field = 1;
 * @return {string}
 */
proto.find_settings.FindSettings.FilterSetting.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.find_settings.FindSettings.FilterSetting} returns this
 */
proto.find_settings.FindSettings.FilterSetting.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string text = 2;
 * @return {string}
 */
proto.find_settings.FindSettings.FilterSetting.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.find_settings.FindSettings.FilterSetting} returns this
 */
proto.find_settings.FindSettings.FilterSetting.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated FilterOption options = 3;
 * @return {!Array<!proto.find_settings.FindSettings.FilterSetting.FilterOption>}
 */
proto.find_settings.FindSettings.FilterSetting.prototype.getOptionsList = function() {
  return /** @type{!Array<!proto.find_settings.FindSettings.FilterSetting.FilterOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.find_settings.FindSettings.FilterSetting.FilterOption, 3));
};


/**
 * @param {!Array<!proto.find_settings.FindSettings.FilterSetting.FilterOption>} value
 * @return {!proto.find_settings.FindSettings.FilterSetting} returns this
*/
proto.find_settings.FindSettings.FilterSetting.prototype.setOptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.find_settings.FindSettings.FilterSetting.FilterOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.find_settings.FindSettings.FilterSetting.FilterOption}
 */
proto.find_settings.FindSettings.FilterSetting.prototype.addOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.find_settings.FindSettings.FilterSetting.FilterOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.find_settings.FindSettings.FilterSetting} returns this
 */
proto.find_settings.FindSettings.FilterSetting.prototype.clearOptionsList = function() {
  return this.setOptionsList([]);
};


/**
 * optional bool multi = 4;
 * @return {boolean}
 */
proto.find_settings.FindSettings.FilterSetting.prototype.getMulti = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.find_settings.FindSettings.FilterSetting} returns this
 */
proto.find_settings.FindSettings.FilterSetting.prototype.setMulti = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.find_settings.FindSettings.OrderSetting.prototype.toObject = function(opt_includeInstance) {
  return proto.find_settings.FindSettings.OrderSetting.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.find_settings.FindSettings.OrderSetting} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.FindSettings.OrderSetting.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: jspb.Message.getFieldWithDefault(msg, 1, ""),
    text: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.find_settings.FindSettings.OrderSetting}
 */
proto.find_settings.FindSettings.OrderSetting.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.find_settings.FindSettings.OrderSetting;
  return proto.find_settings.FindSettings.OrderSetting.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.find_settings.FindSettings.OrderSetting} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.find_settings.FindSettings.OrderSetting}
 */
proto.find_settings.FindSettings.OrderSetting.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.find_settings.FindSettings.OrderSetting.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.find_settings.FindSettings.OrderSetting.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.find_settings.FindSettings.OrderSetting} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.FindSettings.OrderSetting.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string field = 1;
 * @return {string}
 */
proto.find_settings.FindSettings.OrderSetting.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.find_settings.FindSettings.OrderSetting} returns this
 */
proto.find_settings.FindSettings.OrderSetting.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string text = 2;
 * @return {string}
 */
proto.find_settings.FindSettings.OrderSetting.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.find_settings.FindSettings.OrderSetting} returns this
 */
proto.find_settings.FindSettings.OrderSetting.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string searchable_fields = 1;
 * @return {!Array<string>}
 */
proto.find_settings.FindSettings.prototype.getSearchableFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.find_settings.FindSettings} returns this
 */
proto.find_settings.FindSettings.prototype.setSearchableFieldsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.find_settings.FindSettings} returns this
 */
proto.find_settings.FindSettings.prototype.addSearchableFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.find_settings.FindSettings} returns this
 */
proto.find_settings.FindSettings.prototype.clearSearchableFieldsList = function() {
  return this.setSearchableFieldsList([]);
};


/**
 * repeated FilterSetting filters = 2;
 * @return {!Array<!proto.find_settings.FindSettings.FilterSetting>}
 */
proto.find_settings.FindSettings.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.find_settings.FindSettings.FilterSetting>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.find_settings.FindSettings.FilterSetting, 2));
};


/**
 * @param {!Array<!proto.find_settings.FindSettings.FilterSetting>} value
 * @return {!proto.find_settings.FindSettings} returns this
*/
proto.find_settings.FindSettings.prototype.setFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.find_settings.FindSettings.FilterSetting=} opt_value
 * @param {number=} opt_index
 * @return {!proto.find_settings.FindSettings.FilterSetting}
 */
proto.find_settings.FindSettings.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.find_settings.FindSettings.FilterSetting, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.find_settings.FindSettings} returns this
 */
proto.find_settings.FindSettings.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};


/**
 * repeated OrderSetting orders = 3;
 * @return {!Array<!proto.find_settings.FindSettings.OrderSetting>}
 */
proto.find_settings.FindSettings.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.find_settings.FindSettings.OrderSetting>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.find_settings.FindSettings.OrderSetting, 3));
};


/**
 * @param {!Array<!proto.find_settings.FindSettings.OrderSetting>} value
 * @return {!proto.find_settings.FindSettings} returns this
*/
proto.find_settings.FindSettings.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.find_settings.FindSettings.OrderSetting=} opt_value
 * @param {number=} opt_index
 * @return {!proto.find_settings.FindSettings.OrderSetting}
 */
proto.find_settings.FindSettings.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.find_settings.FindSettings.OrderSetting, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.find_settings.FindSettings} returns this
 */
proto.find_settings.FindSettings.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.find_settings.EmptyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.find_settings.EmptyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.find_settings.EmptyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.EmptyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.find_settings.EmptyRequest}
 */
proto.find_settings.EmptyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.find_settings.EmptyRequest;
  return proto.find_settings.EmptyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.find_settings.EmptyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.find_settings.EmptyRequest}
 */
proto.find_settings.EmptyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.find_settings.EmptyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.find_settings.EmptyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.find_settings.EmptyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.EmptyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.find_settings.FindFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.find_settings.FindFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.find_settings.FindFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.FindFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.find_settings.FindFilter}
 */
proto.find_settings.FindFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.find_settings.FindFilter;
  return proto.find_settings.FindFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.find_settings.FindFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.find_settings.FindFilter}
 */
proto.find_settings.FindFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.find_settings.FindFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.find_settings.FindFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.find_settings.FindFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.FindFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string field = 1;
 * @return {string}
 */
proto.find_settings.FindFilter.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.find_settings.FindFilter} returns this
 */
proto.find_settings.FindFilter.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.find_settings.FindFilter.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.find_settings.FindFilter} returns this
 */
proto.find_settings.FindFilter.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.find_settings.SearchTerm.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.find_settings.SearchTerm.prototype.toObject = function(opt_includeInstance) {
  return proto.find_settings.SearchTerm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.find_settings.SearchTerm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.SearchTerm.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    match: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.find_settings.SearchTerm}
 */
proto.find_settings.SearchTerm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.find_settings.SearchTerm;
  return proto.find_settings.SearchTerm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.find_settings.SearchTerm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.find_settings.SearchTerm}
 */
proto.find_settings.SearchTerm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addFields(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {!proto.find_settings.SearchTerm.Match} */ (reader.readEnum());
      msg.setMatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.find_settings.SearchTerm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.find_settings.SearchTerm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.find_settings.SearchTerm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.SearchTerm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMatch();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.find_settings.SearchTerm.Match = {
  LIKE: 0,
  EXACT: 1
};

/**
 * repeated string fields = 1;
 * @return {!Array<string>}
 */
proto.find_settings.SearchTerm.prototype.getFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.find_settings.SearchTerm} returns this
 */
proto.find_settings.SearchTerm.prototype.setFieldsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.find_settings.SearchTerm} returns this
 */
proto.find_settings.SearchTerm.prototype.addFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.find_settings.SearchTerm} returns this
 */
proto.find_settings.SearchTerm.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.find_settings.SearchTerm.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.find_settings.SearchTerm} returns this
 */
proto.find_settings.SearchTerm.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Match match = 3;
 * @return {!proto.find_settings.SearchTerm.Match}
 */
proto.find_settings.SearchTerm.prototype.getMatch = function() {
  return /** @type {!proto.find_settings.SearchTerm.Match} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.find_settings.SearchTerm.Match} value
 * @return {!proto.find_settings.SearchTerm} returns this
 */
proto.find_settings.SearchTerm.prototype.setMatch = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.find_settings.PageInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.find_settings.PageInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.find_settings.PageInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.PageInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    endCursor: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hasNextPage: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    startCursor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    hasPreviousPage: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.find_settings.PageInfo}
 */
proto.find_settings.PageInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.find_settings.PageInfo;
  return proto.find_settings.PageInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.find_settings.PageInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.find_settings.PageInfo}
 */
proto.find_settings.PageInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndCursor(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasNextPage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartCursor(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasPreviousPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.find_settings.PageInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.find_settings.PageInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.find_settings.PageInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.find_settings.PageInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEndCursor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHasNextPage();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStartCursor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHasPreviousPage();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string end_cursor = 1;
 * @return {string}
 */
proto.find_settings.PageInfo.prototype.getEndCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.find_settings.PageInfo} returns this
 */
proto.find_settings.PageInfo.prototype.setEndCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool has_next_page = 2;
 * @return {boolean}
 */
proto.find_settings.PageInfo.prototype.getHasNextPage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.find_settings.PageInfo} returns this
 */
proto.find_settings.PageInfo.prototype.setHasNextPage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string start_cursor = 3;
 * @return {string}
 */
proto.find_settings.PageInfo.prototype.getStartCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.find_settings.PageInfo} returns this
 */
proto.find_settings.PageInfo.prototype.setStartCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool has_previous_page = 4;
 * @return {boolean}
 */
proto.find_settings.PageInfo.prototype.getHasPreviousPage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.find_settings.PageInfo} returns this
 */
proto.find_settings.PageInfo.prototype.setHasPreviousPage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


goog.object.extend(exports, proto.find_settings);
